function test(argument){
	alert(2);

}
//统计当前的所有函数谁耗时最长


这样看来，AOP其实只是OOP的补充而已。OOP从横向上区分出一个个的类来，而AOP则从纵向上向对象中加入特定的代码。有了AOP，OOP变得立体了。如果加上时间维度，AOP使OOP由原来的二维变为三维了，由平面变成立体了。从技术上来说，AOP基本上是通过代理机制实现的。      AOP在编程历史上可以说是里程碑式的，对OOP编程是一种十分有益的补充。

作者：欲眼熊猫
链接：https://www.zhihu.com/question/24863332/answer/48376158
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。